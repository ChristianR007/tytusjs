class KMeans{constructor(){this.k=3}}class LinearKMeans extends KMeans{constructor(){super(),this.data=[]}clusterize(t,a,e){let r=[];this.data=a;for(let n=0;n<e;n++){let e=[];for(let r=0;r<t;r++){let t=a[Math.floor(Math.random()*a.length)];for(;-1!=e.findIndex(a=>a===t);)t=a[Math.floor(Math.random()*a.length)];e.push(t)}e=e.sort(function(t,a){return t>a?1:a>t?-1:0});let n=[],s=[],h=0,i=0,c=!0;a.forEach(t=>{h=0,i=0,c=!0,e.forEach(a=>{let e=this.distance(t,a);c?(i=Math.abs(e),h=a,c=!c):Math.abs(e)<i&&(i=Math.abs(e),h=a),n.push([t,a,e])}),s.push([t,h,i])});let u=[],l=0,o=[];do{u=o,o=[],l=0,e.forEach((t,a)=>{let r=s.filter(a=>a[1]==t).map(t=>t[0]);o.push(this.calculateMeanVariance(r)),l+=r[1],e[a]=o[a][0]}),Number.isNaN(l)&&(l=0),n=[],s=[],h=0,i=0,c=!0,a.forEach(t=>{h=0,i=0,c=!0,e.forEach(a=>{let e=this.distance(t,a);c?(i=Math.abs(e),h=a,c=!c):Math.abs(e)<i&&(i=Math.abs(e),h=a),n.push([t,a,e])}),s.push([t,h,i])})}while(JSON.stringify(u)!=JSON.stringify(o));r.push([l,e,s])}return r.sort(function(t,a){return t[0]>a[0]?1:a[0]>t[0]?-1:0}),r[0][2]}distance(t,a){return a-t}calculateMeanVariance(t){var a=t.reduce(function(t,a){return t+a}),e=function(t,a){return t.reduce(function(t,e){return t+=Math.pow(e-a,2)},0)}(t,a/t.length),r={mean:a/t.length,variance:e/t.length};return[r.mean,r.variance]}}class _2DKMeans extends KMeans{constructor(){super(),this.data=[]}clusterize(t,a,e){let r=[];this.data=a;for(let n=0;n<e;n++){let n=[];for(let e=0;e<t;e++){let t=a[Math.floor(Math.random()*a.length)];for(;-1!=n.findIndex(a=>a===t);)t=a[Math.floor(Math.random()*a.length)];n.push(t)}let s=[],h=[],i=[],c=0,u=!0;a.forEach(t=>{i=[0],c=0,u=!0,n.forEach(a=>{let e=this.distance(t,a);u?(c=Math.abs(e),i=a,u=!u):Math.abs(e)<c&&(c=Math.abs(e),i=a),s.push([t,a,e])}),h.push([t,i,c])});let l=[],o=0,f=[],M=0;do{l=f,f=[],o=0,n.forEach((t,a)=>{let e=h.filter(a=>JSON.stringify(a[1])==JSON.stringify(t)).map(t=>t[0]);f.push([this.calculateMeanVariance(e.map(t=>t[0])),this.calculateMeanVariance(e.map(t=>t[1]))]),o+=e[1],n[a]=f[a][0]}),Number.isNaN(o)&&(o=0),s=[],h=[],i=0,c=0,u=!0,a.forEach(t=>{i=0,c=0,u=!0,n.forEach(a=>{let e=this.distance(t,a);u?(c=Math.abs(e),i=a,u=!u):Math.abs(e)<c&&(c=Math.abs(e),i=a),s.push([t,a,e])}),h.push([t,i,c])}),M++}while(JSON.stringify(l)!=JSON.stringify(f)&&M<e);r.push([o,n,h])}return r.sort(function(t,a){return t[0]>a[0]?1:a[0]>t[0]?-1:0}),r[0][2]}distance(t,a){let e=t[0],r=t[1],n=a[0],s=a[1];return Math.sqrt(Math.pow(n-e,2)+Math.pow(s-r,2))}calculateMeanVariance(t){if(t.length<1)return[1e6,1e6];var a=t.reduce(function(t,a){return t+a}),e=function(t,a){return t.reduce(function(t,e){return t+=Math.pow(e-a,2)},0)}(t,a/t.length),r={mean:a/t.length,variance:e/t.length};return[r.mean,r.variance]}}